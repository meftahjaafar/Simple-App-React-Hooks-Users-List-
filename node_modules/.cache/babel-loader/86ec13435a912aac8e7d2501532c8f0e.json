{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoMyCode\\\\react-hooks\\\\src\\\\Components\\\\Form.js\";\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nvar Form = function Form(_ref) {\n  var setCurrentUser = _ref.setCurrentUser,\n      addCard = _ref.addCard,\n      editing = _ref.editing,\n      setEditing = _ref.setEditing,\n      currentUser = _ref.currentUser,\n      editCard = _ref.editCard;\n  var history = useHistory();\n  return React.createElement(\"div\", {\n    className: \"card card-body  my-3e\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, editing ? 'Edit contact' : 'Add contact'), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-text bg-primary text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-book\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setCurrentUser(currentUser, [currentUser.name = e.target.value]);\n    },\n    placeholder: currentUser.name,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setCurrentUser(currentUser, [currentUser.email = e.target.value]);\n    },\n    placeholder: currentUser.email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Image url:\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return setCurrentUser(currentUser, [currentUser.img = e.target.value]);\n    },\n    placeholder: currentUser.img,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: !editing ? \"btn btn-block btn-success mt-3\" : \"btn btn-block btn-primary mt-3\",\n    onClick: function onClick(e) {\n      if (currentUser.name.trim() && currentUser.email.trim() && currentUser.img.trim() !== '') {\n        if (!editing) {\n          addCard([{\n            name: currentUser.name,\n            email: currentUser.email,\n            img: currentUser.img,\n            id: Math.random()\n          }]);\n          e.preventDefault();\n          history.push('/contact-list');\n        } else {\n          editCard({\n            name: currentUser.name,\n            email: currentUser.email,\n            img: currentUser.img,\n            id: currentUser.id\n          });\n          setEditing(false);\n          e.preventDefault();\n          history.push('/contact-list');\n        }\n      } else {\n        alert('Please, fill all fields');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, editing ? 'Save' : 'Add'), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-block btn-secondary mt-3\",\n    onClick: history.push('/contact-list'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Cancel\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["D:\\GoMyCode\\react-hooks\\src\\Components\\Form.js"],"names":["React","useHistory","Form","setCurrentUser","addCard","editing","setEditing","currentUser","editCard","history","e","name","target","value","email","img","trim","id","Math","random","preventDefault","push","alert"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Form = ({setCurrentUser,addCard,editing,setEditing,currentUser,editCard}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className=\"card card-body  my-3e\">\r\n            <h2 className=\"text-center\">{editing?'Edit contact':'Add contact'}</h2>\r\n            <form>\r\n               <div className=\"input-group\">\r\n                 <div className=\"input-group-prepend\">\r\n                   <div className=\"input-group-text bg-primary text-white\"> \r\n                     <i className=\"fas fa-book\"></i> \r\n                    </div>\r\n                 </div>\r\n                    <label>Name:</label>\r\n                    <input type=\"text\" className=\"form-control\" \r\n                    onChange={(e)=>setCurrentUser(currentUser,[currentUser.name=e.target.value])}\r\n                     placeholder={currentUser.name} required></input>\r\n                    <label>Email:</label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                     onChange={(e)=>setCurrentUser(currentUser,[currentUser.email=e.target.value])}\r\n                     placeholder={currentUser.email} required></input>\r\n                    <label>Image url:</label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                    onChange={(e)=>setCurrentUser(currentUser,[currentUser.img=e.target.value])} \r\n                    placeholder={currentUser.img} required></input>\r\n              </div> \r\n                    <button type=\"submit\" \r\n                         className={\r\n                            !editing ? \"btn btn-block btn-success mt-3\" :\r\n                            \"btn btn-block btn-primary mt-3\"}\r\n                    onClick={(e)=>{if(currentUser.name.trim() && currentUser.email.trim() && currentUser.img.trim()!==''){\r\n                        if(!editing){\r\n                            addCard([{\r\n                                name: currentUser.name,\r\n                                email: currentUser.email,\r\n                                img: currentUser.img,\r\n                                id: Math.random()\r\n                            }])\r\n                            e.preventDefault()\r\n                            history.push('/contact-list')\r\n                            } \r\n                        else {\r\n                            editCard({\r\n                                name: currentUser.name,\r\n                                email: currentUser.email,\r\n                                img: currentUser.img,\r\n                                id: currentUser.id\r\n                                })\r\n                            setEditing(false)\r\n                            e.preventDefault()\r\n                            history.push('/contact-list')\r\n                        }\r\n                    } else {\r\n                            alert('Please, fill all fields')\r\n                        }}}>\r\n                    {editing?'Save':'Add'}</button>  \r\n                    <button type=\"button\" class=\"btn btn-block btn-secondary mt-3\" onClick={history.push('/contact-list')}>Cancel</button>                           \r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}